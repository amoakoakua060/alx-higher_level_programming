
============================
How to Use 4-print_square.py
============================

This file defines doctests for function with prototype ``print_square(size)``

Usage
=====

Squares are printed using the ``#`` character

::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(1)
    #

::

    >>> print_square(3)
    ###
    ###
    ###

::

    >>> print_square(9)
    #########
    #########
    #########
    #########
    #########
    #########
    #########
    #########
    #########

::

    >>> print_square(0)

Invalid Sizes
=============

The function raises an exception when ``size`` is not an integer or less than zero

::

    >>> print_square("string")
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(5.55)
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(None)
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(-3)
    Traceback (most recent call last):
    ValueError: size must be >= 0

::

    >>> print_square(-2.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'
