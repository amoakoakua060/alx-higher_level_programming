
==============================
How to Use 2-matrix_divided.py
==============================

This file defines doctests for function with prototype ``matrix_divided(matrix, div)``

Usage
=====

``matrix_divided(...)`` returns a new matrix that is a copy of the parameter
``matrix`` with all elements divided by ``div``.

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ...     [6, 9, 12],
    ...     [12, 15, 18]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[2.0, 3.0, 4.0], [4.0, 5.0, 6.0]]
    >>> print(matrix)
    [[6, 9, 12], [12, 15, 18]]

::

    >>> matrix = [
    ...     [2, 3, 7],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, -3))
    [[-0.67, -1.0, -2.33], [-1.33, -1.67, -2.0]]
    >>> print(matrix)
    [[2, 3, 7], [4, 5, 6]]

::

    >>> matrix = [
    ...     [2, 3, 7],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.67, 1.0, 2.33], [1.33, 1.67, 2.0]]
    >>> print(matrix)
    [[2, 3, 7], [4, 5, 6]]

::

    >>> matrix = [
    ...     [1.1, -2.2, 3.3],
    ...     [4.4, 5.5, -6.6]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

::

    >>> matrix = [
    ...     [1.1, -2.2, 3, 4.4, 5],
    ...     [-6.6, 7, 8, 9.999, 10]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    [[0.37, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

::

    >>> matrix = [[]]
    >>> print(matrix_divided(matrix, 3))
    [[]]

Invalid Matrices
==============

The function raises exceptions when parameter ``matrix`` a list of lists
consisting of either ints or floats

::

    >>> matrix = "string"
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

    >>> matrix = None
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

    >>> matrix = []
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

    >>> matrix = [1, 2]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

    >>> matrix = [
    ...     [1, 2],
    ...     [3, "string"]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

::

    >>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [5, 6, 7]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Invalid Divisors
================

The function will raise an exception if parameter ``div`` is not an 
int or float that is not equal to 0

::

    >>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]
    >>> print(matrix_divided(matrix, "string"))
    Traceback (most recent call last):
    TypeError: div must be a number

::

    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    TypeError: div must be a number

::

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ZeroDivisionError: division by zero
